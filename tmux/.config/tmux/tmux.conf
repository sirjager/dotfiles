## =====================================================
## Plugin Manager
## =====================================================
set-environment -gF TMUX_PLUGIN_MANAGER_PATH '#{HOME}/.local/share/tmux/plugins'

if 'test ! -d "${TMUX_PLUGIN_MANAGER_PATH}/tpm"' {
  run 'mkdir -p "${TMUX_PLUGIN_MANAGER_PATH}"'
  run 'git clone https://github.com/tmux-plugins/tpm "${TMUX_PLUGIN_MANAGER_PATH}/tpm"'
  run '${TMUX_PLUGIN_MANAGER_PATH}/tpm/bin/install_plugins'
}

set -g @plugin 'tmux-plugins/tpm'                           # tmux plugin manager
set -g @plugin 'catppuccin/tmux'                            # catppuccin tmux theme
set -g @plugin 'tmux-plugins/tmux-yank'                     # yanking in tmux
set -g @plugin 'tmux-plugins/tmux-sensible'                 # 
set -g @plugin 'christoomey/vim-tmux-navigator'             # seamles navigation between tmux and neovim
set -g @plugin 'omerxx/tmux-floax'                          # floating terminal popup for tmux
set -g @plugin 'tmux-plugins/tmux-resurrect'              # save / restore tmux sessions
set -g @plugin 'tmux-plugins/tmux-continuum'              # 
set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'dreknix/tmux-primary-ip'
set -g @plugin 'tmux-plugins/tmux-online-status'


## =====================================================
## General Settings
## =====================================================

new-session                     # auto create nEw session If no other exists

set -gq allow-passthrough on  # for images in tmux

set -g base-index 1           # start windows numbering at 1
setw -g pane-base-index 1     # make pane numbering consistent with windows
set -g renumber-windows on    # renumber windows when a window is closed

set -g set-titles on          # set terminal title
set -g allow-rename on        # allow renaming of windows
setw -g automatic-rename on   # rename window to reflect current program

setw -g aggressive-resize on  # useful when using sharing a session with different size terminals


set -g display-panes-time 800 # slightly longer pane indicators display time
set -g display-time 1000      # slightly longer status messages display time

set -g status-interval 5     # refresh / update / redraw status line every 10 seconds

set -g mouse on               # allow the mouse to resize windows and select tabs
set -g monitor-activity on    # activity

set -g bell-action any        # bell in another window should cause a bell in the current window
set -g visual-bell off        # Don't show distracting notifications
set -g visual-activity off    # Don't show distracting notifications
set -g focus-events on        # focus events enabled for terminals that support them

set -g history-limit 9999999  # Increase scrollback buffer size
set -g detach-on-destroy on   # don't detach tmux when killing a session

set -as terminal-features ",*:RGB" 
# set -ag terminal-overrides ",xterm-256color:RGB"
# set -g default-terminal "xterm-256color"
set -ag terminal-overrides ",tmux-256color:RGB"
set -g default-terminal "tmux-256color"

setw -g mode-keys vi          # Use Vi mode
set -s escape-time 0          # address vim mode switching delay (http://superuser.com/a/252717/65504)

set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # Enable undercurl
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0

## =====================================================
## Keybind Settings
## =====================================================

unbind C-b                     # unbind defaults 
unbind '"'                     # unbind defaults 
unbind %                       # unbind defaults 
unbind r                       # unbind for relaod
unbind u                       # used in quick windows below
unbind q                       # used in quick windows below
unbind p                       # unsed in floax floating term for tmux
unbind P                       # unsed in floax floating term for tmux

set -g prefix M-q             # set prefix
bind-key M-q send-prefix      # set prefix

bind-key e choose-session     # choose from active sessions

bind-key n new-window         # New window
bind -n M-h previous-window   # previous window
bind -n M-l next-window       # next window
bind Space last-window        # quick switch between two most recently used windows
bind Tab last-window          # quick switch between two most recently used windows


bind -r W kill-pane                   # kill current pane
bind -r m resize-pane -Z              # maximize current pane
bind -r j resize-pane -D 1            # resize pane to bottom
bind -r k resize-pane -U 1            # resize pane to up
bind -r l resize-pane -R 1            # resize pane to right
bind -r h resize-pane -L 1            # resize pane to left

bind-key i next-layout                                   # switch between horizontal and vertical layouts
bind '\' split-window -h -c "#{pane_current_path}"       #'"" split window vertically
bind '-' split-window -v -c "#{pane_current_path}"       # split window horizontally

bind Enter copy-mode # enter copy mode
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi C-v send -X rectangle-toggle
bind -T copy-mode-vi y send -X copy-selection-and-cancel
bind -T copy-mode-vi Escape send -X cancel
bind -T copy-mode-vi H send -X start-of-line
bind -T copy-mode-vi L send -X end-of-line


bind r source-file ~/.config/tmux/tmux.conf \; display "Reloaded Tmux Configs"                                             # "reload tmux configs"

bind-key N command-prompt -p "open new session: " "new-session -A -s '%%'"
bind-key o command-prompt -p "open in popup: " 'display-popup -d "#{pane_current_path}" -y 45 -h 90% -w 90% -E "%%"'
bind-key O command-prompt -p "open in new window: " "new-window '%%'"

bind-key y run -b "tmux show-buffer | xclip -selection clipboard"\; display-message "copied tmux buffer to clipboard"      # copy pane text to clipboard

## =====================================================
## Popups And Shortcuts : Alt + Shift + <key>
## =====================================================
bind -n M-X popup -d '#{pane_current_path}' -E -h 100% -w 100% -x 100% "tmux kill-session -a"       # kill other tmux sessions
bind -n M-K popup -d '#{pane_current_path}' -E -h 100% -w 100% -x 100% "btop"
# bind -n M-P kill-pane -a \; display-message "killed all panes except active"

## =====================================================
## Popups : display-popup
# -E : closes the popup automatically
# -d : start directory
# -x, -y : position for x and y axis
# -h, -w : height, width, can also be percentage
# -B, -b <border-style> : '-B' removes the border and '-b' to apply specific border style
# -e 'VAR=FOO' : to set env variables can be multiple, -e 'FOO=BAR' -e 'BAR=FOO'
# -T : Popup title
# -C : closes the popup
## =====================================================

# Yazi | open in new-window | open in popup-style | in popup yazi was not displaying images, so using with tmux new-session command
bind-key f display-popup -T " Yazi: #{pane_current_path} " -y 45 -h 90% -w 95% -d "#{pane_current_path}" -E 'tmux new-session -A -s yazi "yazi"'
bind-key F new-window -n "yazi" -c "#{pane_current_path}" "yazi"

# LazyGit | open in popup-style | open in new-window
bind-key g display-popup -T " LazyGit: #{pane_current_path} " -y 45 -h 90% -w 95% -d "#{pane_current_path}" -E 'lazygit'
bind-key G new-window -n "yazi" -c "#{pane_current_path}" "lazygit"

# Search And Replace | pacman -S serpl |  https://github.com/yassinebridi/serpl/releases
bind-key s display-popup -T " Search And Replace: #{pane_current_path} " -y 45 -h 90% -w 95% -d "#{pane_current_path}" -E 'serpl'
bind-key S new-window -n "search n replace" -c "#{pane_current_path}" "serpl"

# Podman TUI | https://github.com/containers/podman-tui/blob/main/install.md#arch-linux-aur
bind-key p display-popup -T " Podman " -y 45 -h 90% -w 95% -d "#{pane_current_path}" -E 'podman-tui'
bind-key P new-window -n "podman" -c "#{pane_current_path}" 'podman-tui'

# LazyDocker | https://github.com/yassinebridi/serpl/releases
bind-key d display-popup -T " LazyDocker " -y 45 -h 90% -w 95% -d "#{pane_current_path}" -E 'lazydocker'
bind-key D new-window -n "docker" -c "#{pane_current_path}" 'lazydocker'

# LazySQL | open in popup-style | open in new-window
bind-key q display-popup -T " LazySQL " -y 45 -h 90% -w 95% -d "#{pane_current_path}" -E 'lazysql'
bind-key Q new-window -n "LazySQL" -c "#{pane_current_path}" "lazysql"

# Posting | Rest Api TUI | https://github.com/darrenburns/posting | yay -S python-pipx | pipx install posting 
# this long command will help us keeping rest api files in cwd only, not in default path ie. ~/.local/share/posting/default
bind-key a run-shell 'if [ -d "#{pane_current_path}/posting" ]; then tmux display-popup -T "Rest Client" -y 45 -h 90% -w 95% -d "#{pane_current_path}" -E "posting default --collection ./posting --env ./posting/.env"; else tmux display-message "no posting directory found in current path"; fi'
bind-key A run-shell 'if [ -d "#{pane_current_path}/posting" ]; then tmux new-window -n "Rest Client" -c "#{pane_current_path}" "posting default --collection ./posting --env ./posting/.env"; else tmux display-message "no posting directory found in current path"; fi'





# # =====================================================
# # Plugin Settings
# # =====================================================

set -g @floax-bind 't'                        # toggle terminal:   prefix; p 
set -g @floax-bind-menu 't'                   # floax menu:     shift+p
set -g @floax-width '90%'                     # floax width
set -g @floax-height '90%'                    # floax-height
set -g @floax-border-color 'magenta'          # floax border
set -g @floax-text-color 'blue'               # floax text color
set -g @floax-change-path 'false'             # floax change dir path


# # =====================================================
# # Theme Settings
# # link: https://github.com/catppuccin/tmux/discussions/317#discussioncomment-11064512
# # =====================================================
set -g status-position top   # tmux bar position
set -g status-style "bg=#{@thm_bg}" # tmux bar background
set -g status-justify "absolute-centre"  # tmux bar center

set -g @catppuccin_flavor "macchiato"
set -g @catppuccin_status_background "none"
set -g @catppuccin_window_status_style "none"
set -g @catppuccin_pane_status_enabled "off"
set -g @catppuccin_pane_border_status "off"

set -g @online_icon "ok"
set -g @offline_icon "nok"

# status left look and feel
set -g status-left-length 100
set -g status-left ""
set -ga status-left "#{?client_prefix,#{#[bg=#{@thm_red},fg=#{@thm_bg},bold]  #S },#{#[bg=default,fg=#{@thm_green}]  #S }}"
set -ga status-left "#[bg=default,fg=#{@thm_overlay_0},none]│"
set -ga status-left "#[bg=default,fg=#{@thm_maroon}]  #{pane_current_command} "
set -ga status-left "#[bg=default,fg=#{@thm_overlay_0},none]│"
set -ga status-left "#[bg=default,fg=#{@thm_blue}]  #{=/-32/...:#{s|$USER|~|:#{b:pane_current_path}}} "
set -ga status-left "#[bg=default,fg=#{@thm_overlay_0},none]#{?window_zoomed_flag,│,}"
set -ga status-left "#[bg=default,fg=#{@thm_yellow}]#{?window_zoomed_flag,  zoom ,}"


# status right look and feel
set -g status-right-length 100
set -g status-right ""
# set -ga status-right "#[fg=#{@thm_overlay_0}]#[fg=#{@thm_red}] #(top -bn1 | grep 'Cpu(s)' | awk '{print $2 + $4}')% "
# set -ga status-right "#[fg=#{@thm_overlay_0}]#[fg=#{@thm_green}]󰍛 #(free -h | awk '/^Mem:/ {print $3}')B "
# set -ga status-right "#[bg=default,fg=#{@thm_overlay_0}, none]│"
set -ga status-right "#[fg=#{@thm_overlay_0}] #[fg=#{@thm_yellow}]  #(pamixer --get-volume)% "
set -ga status-right "#{?#{e|>=:10,#{battery_percentage}},#{#[bg=default,fg=#{@thm_bg}]},#{#[bg=default,fg=#{@thm_pink}]}} #{battery_icon} #{battery_percentage} "
set -ga status-right "#[fg=#{@thm_overlay_0}]#[fg=#{@thm_yellow}]󰛨 #(light -G) "
set -ga status-right "#[bg=default,fg=#{@thm_overlay_0}, none]│ "
set -ga status-right "#[bg=default]#{?#{==:#{online_status},ok},#[fg=#{@thm_mauve}] ,#[fg=#{@thm_red},bold]#[reverse] 󰖪 } "
set -ga status-right "#[fg=#{@thm_overlay_0}]#[fg=#{@thm_yellow}]#(~/.local/bin/capsnumscroll caps-icon) "
set -ga status-right "#[fg=#{@thm_overlay_0}]#[fg=#{@thm_yellow}]#(~/.local/bin/capsnumscroll num-icon) "
set -ga status-right "#[bg=default,fg=#{@thm_overlay_0}, none]│"
set -ga status-right "#[bg=default,fg=#{@thm_blue}] 󰭦 %a %d %h 󰅐 %I:%M %p"



# window look and feel
set -g automatic-rename-format "Window"

set -g window-status-format " #I#{?#{!=:#{window_name},Window},: #W,} "
set -g window-status-style "bg=default,fg=#{@thm_rosewater}"
set -g window-status-last-style "bg=default,fg=#{@thm_peach}"
set -g window-status-activity-style "bg=default,fg=#{@thm_fg}"
set -g window-status-bell-style "bg=#{@thm_red},fg=#{@thm_bg},bold"
set -gF window-status-separator "#[bg=default,fg=#{@thm_overlay_0}]│"

set -g window-status-current-format " #I#{?#{!=:#{window_name},Window},: #W,} "
set -g window-status-current-style "bg=#{@thm_peach},fg=#{@thm_bg},bold"


# pane border look and feel
setw -g pane-border-status top
setw -g pane-border-format ""
setw -g pane-border-lines single
setw -g popup-style 'bg=default'

# you can change theme override any theme colors like this
set -ogq @thm_peach "#f5a97f"

# # =====================================================
# # Initialize tmux plugin manager and source all plugins
# # =====================================================
run "#{TMUX_PLUGIN_MANAGER_PATH}/tpm/tpm"

setw -g popup-style "bg=default,fg=#{@thm_fg}"
setw -g popup-border-style "bg=default,fg=#{@thm_peach}"
setw -g popup-border-lines rounded # single | double | heavy | rounded | simple | padded | none

setw -g pane-border-style "bg=default,fg=#{@thm_overlay_0}"
setw -g pane-active-border-style "bg=default,fg=#{@thm_peach}"
