
input {
    keyboard {
        numlock
        repeat-delay 170
        repeat-rate 70
    }

    touchpad {
        tap
        natural-scroll
        accel-speed 0.2
        accel-profile "adaptive"
        scroll-method "two-finger"
        // disabled-on-external-mouse
    }

    warp-mouse-to-focus
    // focus-follows-mouse
}

environment {
    GDK_BACKEND "wayland,X11"
    QT_QPA_PLATFORM "wayland;xcb"
    SDL_VIDEODRIVER "wayland"
    CLUTTER_BACKEND "wayland"
    XDG_CURRENT_DESKTOP "niri"
    XDG_SESSION_DESKTOP "niri"
    QT_WAYLAND_DISABLE_WINDOWDECORATION "1"

    // QT_QPA_PLATFORMTHEME "gtk3"
    // QT_QPA_PLATFORMTHEME_QT6 "gtk3"
    // chose either gtk or qt6ct
    QT_QPA_PLATFORMTHEME "qt6ct"
    QT_QPA_PLATFORMTHEME_QT6 "qt6ct"
}


// # Shell And Bars - use any one
spawn-at-startup "dms" "run"
// spawn-sh-at-startup "pgrep -x ignis >/dev/null || ignis init"


// # System
spawn-sh-at-startup "dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP"
spawn-sh-at-startup "dbus-update-activation-environment --systemd --all"
spawn-sh-at-startup "systemctl --user import-environment WAYLAND_DISPLAY XDG_CURRENT_DESKTOP"
spawn-sh-at-startup "/usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1 >/dev/null 2>&1"
spawn-sh-at-startup "pgrep -f gnome-keyring-daemon >/dev/null || /usr/bin/gnome-keyring-daemon --start --components=secrets"

// # Background watchers
spawn-sh-at-startup "pidof -x lowbatmon >/dev/null || lowbatmon >/dev/null 2>&1"

// # Desktop
// spawn-at-startup "bash" "-c" "wl-paste --watch cliphist store &"
spawn-sh-at-startup "pgrep -x swww-daemon >/dev/null || swww-daemon"
// spawn-sh-at-startup "pgrep -x nm-applet >/dev/null || nm-applet --indicator >/dev/null 2>&1"
// spawn-sh-at-startup "pgrep -x blueman-applet >/dev/null || blueman-applet >/dev/null 2>&1"
spawn-sh-at-startup "pgrep -f kdeconnect-indicator >/dev/null || kdeconnect-indicator >/dev/null 2>&1"
spawn-sh-at-startup "pgrep -x udiskie >/dev/null || udiskie --no-automount --smart-tray >/dev/null 2>&1"

// # Applications
spawn-sh-at-startup "pgrep -x brave >/dev/null || brave --profile-directory=sirjager >/dev/null 2>&1"


cursor {
    xcursor-theme "Bibata-Modern-Amber"
    xcursor-size 20
}


animations {
    // off
    slowdown 2.0
}

layout {
    gaps 24

    // When to center a column when changing focus, options are:
    // - "never", default behavior, focusing an off-screen column will keep at the left
    //   or right edge of the screen.
    // - "always", the focused column will always be centered.
    // - "on-overflow", focusing a column will center it if it doesn't fit
    //   together with the previously focused column.
    center-focused-column "never"

    // You can customize the widths that "switch-preset-column-width" (Mod+R) toggles between.
    preset-column-widths {
        // Proportion sets the width as a fraction of the output width, taking gaps into account.
        // For example, you can perfectly fit four windows sized "proportion 0.25" on an output.
        // The default preset widths are 1/3, 1/2 and 2/3 of the output.
        proportion 0.33333
        proportion 0.5
        proportion 0.66667

        // Fixed sets the width in logical pixels exactly.
        // fixed 1920
    }

    // You can also customize the heights that "switch-preset-window-height" (Mod+Shift+R) toggles between.
    // preset-window-heights { }

    // You can change the default width of the new windows.
    default-column-width { proportion 0.5; }
    // If you leave the brackets empty, the windows themselves will decide their initial width.
    // default-column-width {}

    // By default focus ring and border are rendered as a solid background rectangle
    // behind windows. That is, they will show up through semitransparent windows.
    // This is because windows using client-side decorations can have an arbitrary shape.
    //
    // If you don't like that, you should uncomment `prefer-no-csd` below.
    // Niri will draw focus ring and border *around* windows that agree to omit their
    // client-side decorations.
    //
    // Alternatively, you can override it with a window rule called
    // `draw-border-with-background`.

    // You can change how the focus ring looks.
    focus-ring {
      off
    }

    border {
      // off
      width 2
      active-color "#ffc87f"
    }

    shadow {
        on
        softness 30
        spread 5
        offset x=0 y=5
        color "#0007"
        draw-behind-window true
    }

    // Struts shrink the area occupied by windows, similarly to layer-shell panels.
    // You can think of them as a kind of outer gaps. They are set in logical pixels.
    // Left and right struts will cause the next window to the side to always be visible.
    // Top and bottom struts will simply add outer gaps in addition to the area occupied by
    // layer-shell panels and regular gaps.
    struts {
        // left 64
        // right 64
        // top 64
        // bottom 64
    }

}





hotkey-overlay {
    skip-at-startup
}

// Uncomment this line to ask the clients to omit their client-side decorations if possible.
// If the client will specifically ask for CSD, the request will be honored.
// Additionally, clients will be informed that they are tiled, removing some client-side rounded corners.
// This option will also fix border/focus ring drawing behind some semitransparent windows.
// After enabling or disabling this, you need to restart the apps for this to take effect.
prefer-no-csd

// You can change the path where screenshots are saved.
// A ~ at the front will be expanded to the home directory.
// The path is formatted with strftime(3) to give you the screenshot date and time.
screenshot-path "/mnt/storage/downloads/Pictures/Screenshots/Screenshot-from-%Y-%m-%d %H-%M-%S.png"

// Open the Firefox picture-in-picture player as floating by default.
window-rule {
    match app-id="scrcpy"
    match app-id="udiskie"
    match app-id="blueman-manager"
    match app-id="lxqt-policykit-agent"
    match app-id="nm-connection-editor"
    match app-id="org.pulseaudio.pavucontrol"
    match app-id="polkit-gnome-authentication-agent-1"

    match app-id="org.telegram.desktop"
    match app-id="org.manjaro.pamac.manager"

    match app-id=r#"firefox$"# title="^Picture-in-Picture$"
    match app-id=r#"brave-browser$"# title="^Picture-in-Picture$"
    open-floating true
}

window-rule {
  match app-id=r#"firefox$"#
  match app-id=r#"brave-browser$"#
  open-maximized true
}

// Example: block out two password managers from screen capture.
// (This example rule is commented out with a "/-" in front.)
/-window-rule {
    match app-id=r#"^org\.keepassxc\.KeePassXC$"#
    match app-id=r#"^org\.gnome\.World\.Secrets$"#

    block-out-from "screen-capture"

    // Use this instead if you want them visible on third-party screenshot tools.
    // block-out-from "screencast"
}

// Example: enable rounded corners for all windows.
// (This example rule is commented out with a "/-" in front.)
window-rule {
    geometry-corner-radius 20
    clip-to-geometry true
}

binds {
    Mod+Shift+Slash { show-hotkey-overlay; }

    Mod+Ctrl+N hotkey-overlay-title="Notification Center" {spawn-sh "dms ipc call notifications toggle";}
    Mod+Ctrl+W hotkey-overlay-title="Browse Wallpapers" {spawn-sh "dms ipc call dankdash wallpaper";}
    Mod+Ctrl+I hotkey-overlay-title="Notepad" {spawn-sh "dms ipc call notepad toggle";}
    Mod+Ctrl+O hotkey-overlay-title="Lock Screen" {spawn-sh "dms ipc call lock lock";}
    Mod+Ctrl+T hotkey-overlay-title="Task Manager" {spawn-sh "dms ipc call processlist toggle";}
    Mod+Ctrl+V hotkey-overlay-title="Clipboard Manager" {spawn-sh "dms ipc call clipboard toggle";}
    Mod+Ctrl+Y hotkey-overlay-title="Settings Manager" {spawn-sh "dms ipc call settings toggle";}

    Alt+Space hotkey-overlay-title="Application Launcher" { spawn-sh "rofi -show drun -theme ~/.config/rofi/launchers/type-6/style-9.rasi"; }

    // Suggested binds for running programs: terminal, app launcher, screen locker.
    Alt+Return hotkey-overlay-title="Open a Terminal: Kitty" { spawn-sh "kitty bash -c tmux attach"; }
    Mod+B hotkey-overlay-title="Browser | Brave | SirJager" { spawn "brave" "--profile-directory=sirjager"; }
    Mod+E hotkey-overlay-title="FileManager | Nautilus" { spawn "nautilus" "--new-window"; }
    Mod+Ctrl+P hotkey-overlay-title="Session Menu | Power Menu" { spawn-sh "~/.config/rofi/powermenu/type-6/powermenu.sh"; }

    // Use spawn-sh to run a shell command. Do this if you need pipes, multiple commands, etc.
    // Note: the entire command goes as a single argument. It's passed verbatim to `sh -c`.
    // For example, this is a standard bind to toggle the screen reader (orca).
    Super+Alt+S allow-when-locked=true hotkey-overlay-title=null { spawn-sh "pkill orca || exec orca"; }

    XF86AudioRaiseVolume allow-when-locked=true { spawn-sh "wpctl set-volume @DEFAULT_AUDIO_SINK@ 0.1+"; }
    XF86AudioLowerVolume allow-when-locked=true { spawn-sh "wpctl set-volume @DEFAULT_AUDIO_SINK@ 0.1-"; }
    XF86AudioMute        allow-when-locked=true { spawn-sh "wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle"; }
    XF86AudioMicMute     allow-when-locked=true { spawn-sh "wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle"; }
    Alt+KP_Add allow-when-locked=true hotkey-overlay-title="Volume | Up" { spawn-sh "dms ipc call audio increment 5"; }
    Alt+KP_Subtract allow-when-locked=true hotkey-overlay-title="Volume | Down" { spawn-sh "dms ipc call audio decrement 5"; }

    // Example media keys mapping using playerctl.
    // This will work with any MPRIS-enabled media player.
    XF86AudioPlay        allow-when-locked=true { spawn-sh "playerctl play-pause"; }
    XF86AudioStop        allow-when-locked=true { spawn-sh "playerctl stop"; }
    XF86AudioPrev        allow-when-locked=true { spawn-sh "playerctl previous"; }
    XF86AudioNext        allow-when-locked=true { spawn-sh "playerctl next"; }

    XF86MonBrightnessUp allow-when-locked=true { spawn-sh "$myscripts/brightness up"; }
    XF86MonBrightnessDown allow-when-locked=true { spawn-sh "$myscripts/brightness down"; }
    Mod+KP_Add allow-when-locked=true hotkey-overlay-title="Brightness | Up"  { spawn-sh "dms ipc call brightness increment 5 \"\" "; }
    Mod+KP_Subtract allow-when-locked=true hotkey-overlay-title="Brightness | Down" { spawn-sh "dms ipc call brightness decrement 5 \"\" "; }

    // Open/close the Overview: a zoomed-out view of workspaces and windows.
    // You can also move the mouse into the top-left hot corner,
    // or do a four-finger swipe up on a touchpad.
    Mod+Tab repeat=false { toggle-overview; }

    Mod+W repeat=false { close-window; }

    Mod+H     { focus-column-left; }
    Mod+L     { focus-column-right; }
    Mod+J     { focus-window-or-workspace-down; }
    Mod+K     { focus-window-or-workspace-up; }

    Mod+I     { focus-workspace-up; }
    Mod+U     { focus-workspace-down; }



    Mod+Shift+H     { move-column-left; }
    Mod+Shift+L     { move-column-right; }
    Mod+Shift+J     { move-window-to-workspace-down; }
    Mod+Shift+K     { move-window-to-workspace-up; }

    // Similarly, you can bind touchpad scroll "ticks".
    // Touchpad scrolling is continuous, so for these binds it is split into
    // discrete intervals.
    // These binds are also affected by touchpad's natural-scroll, so these
    // example binds are "inverted", since we have natural-scroll enabled for
    // touchpads by default.
    // Mod+TouchpadScrollDown { spawn-sh "wpctl set-volume @DEFAULT_AUDIO_SINK@ 0.02+"; }
    // Mod+TouchpadScrollUp   { spawn-sh "wpctl set-volume @DEFAULT_AUDIO_SINK@ 0.02-"; }

    Mod+1 { focus-workspace 1; }
    Mod+2 { focus-workspace 2; }
    Mod+3 { focus-workspace 3; }
    Mod+4 { focus-workspace 4; }
    Mod+5 { focus-workspace 5; }
    Mod+6 { focus-workspace 6; }
    Mod+7 { focus-workspace 7; }
    Mod+8 { focus-workspace 8; }
    Mod+9 { focus-workspace 9; }
    Mod+Shift+1 { move-column-to-workspace 1; }
    Mod+Shift+2 { move-column-to-workspace 2; }
    Mod+Shift+3 { move-column-to-workspace 3; }
    Mod+Shift+4 { move-column-to-workspace 4; }
    Mod+Shift+5 { move-column-to-workspace 5; }
    Mod+Shift+6 { move-column-to-workspace 6; }
    Mod+Shift+7 { move-column-to-workspace 7; }
    Mod+Shift+8 { move-column-to-workspace 8; }
    Mod+Shift+9 { move-column-to-workspace 9; }

    // Switches focus between the current and the previous workspace.
    Mod+Shift+Tab { focus-workspace-previous; }

    // The following binds move the focused window in and out of a column.
    // If the window is alone, they will consume it into the nearby column to the side.
    // If the window is already in a column, they will expel it out.
    Mod+Shift+U  { consume-or-expel-window-left; }
    Mod+Shift+I  { consume-or-expel-window-right; }

    // Consume one window from the right to the bottom of the focused column.
    Mod+Comma  { consume-window-into-column; }
    // Expel the bottom window from the focused column to the right.
    Mod+Period { expel-window-from-column; }

    Mod+R { switch-preset-column-width; }
    // Cycling through the presets in reverse order is also possible.
    // Mod+R { switch-preset-column-width-back; }
    Mod+Shift+R { switch-preset-window-height; }
    Mod+Ctrl+R { reset-window-height; }
    Mod+F { maximize-column; }
    Mod+Shift+F { fullscreen-window; }

    // Expand the focused column to space not taken up by other fully visible columns.
    // Makes the column "fill the rest of the space".
    Mod+Ctrl+F { expand-column-to-available-width; }

    Mod+C { center-column; }

    // Center all fully visible columns on screen.
    Mod+Ctrl+C { center-visible-columns; }

    // Finer width adjustments.
    // This command can also:
    // * set width in pixels: "1000"
    // * adjust width in pixels: "-5" or "+5"
    // * set width as a percentage of screen width: "25%"
    // * adjust width as a percentage of screen width: "-10%" or "+10%"
    // Pixel sizes use logical, or scaled, pixels. I.e. on an output with scale 2.0,
    // set-column-width "100" will make the column occupy 200 physical screen pixels.
    Mod+Ctrl+H { set-column-width "-10%"; }
    Mod+Ctrl+L { set-column-width "+10%"; }

    // Finer height adjustments when in column with other windows.
    Mod+Ctrl+J { set-window-height "-10%"; }
    Mod+Ctrl+K { set-window-height "+10%"; }

    // Move the focused window between the floating and the tiling layout.
    Mod+P       { toggle-window-floating; }
    Mod+Shift+P { switch-focus-between-floating-and-tiling; }

    // Toggle tabbed column display mode.
    // Windows in this column will appear as vertical tabs,
    // rather than stacked on top of each other.
    // Mod+W { toggle-column-tabbed-display; }

    // Actions to switch layouts.
    // Note: if you uncomment these, make sure you do NOT have
    // a matching layout switch hotkey configured in xkb options above.
    // Having both at once on the same hotkey will break the switching,
    // since it will switch twice upon pressing the hotkey (once by xkb, once by niri).
    // Mod+Space       { switch-layout "next"; }
    // Mod+Shift+Space { switch-layout "prev"; }

    Mod+V { screenshot; }
    Mod+Alt+V { screenshot-window; }
    Mod+Shift+V { screenshot-screen; }
    Print { screenshot; }
    Ctrl+Print { screenshot-screen; }
    Alt+Print { screenshot-window; }

    // Applications such as remote-desktop clients and software KVM switches may
    // request that niri stops processing the keyboard shortcuts defined here
    // so they may, for example, forward the key presses as-is to a remote machine.
    // It's a good idea to bind an escape hatch to toggle the inhibitor,
    // so a buggy application can't hold your session hostage.
    //
    // The allow-inhibiting=false property can be applied to other binds as well,
    // which ensures niri always processes them, even when an inhibitor is active.
    Mod+Escape allow-inhibiting=false { toggle-keyboard-shortcuts-inhibit; }

    // The quit action will show a confirmation dialog to avoid accidental exits.
    Mod+Alt+Shift+Q { quit; }

    Mod+O hotkey-overlay-title="Open Copied Link" {
      spawn-sh "url=$(wl-paste | grep -oE 'https?://[^[:space:]]+' | head -n1 | sed 's/[[:punct:]]*$//') && [[ \"$url\" =~ ^https?:// ]] && xdg-open \"$url\" && notify-send \"Opening link in $BROWSER\" \"$url\" || notify-send \"Clipboard does not contain a valid link.\" \"$url\" ";
    }

//
}

layer-rule {
    match namespace="quickshell"
    place-within-backdrop true
}

layer-rule {
    match namespace="dms:blurwallpaper"
    place-within-backdrop true
}


debug {
   honor-xdg-activation-with-invalid-serial
}
