#!/usr/bin/env bash

TRACK_FILE="$myrecentedits"

ACTION_RESET=""
ACTION_REMOVE=""
ACTION_SKIP=""

while [ $# -gt 0 ]; do
  case "$1" in
  --skip)
    ACTION_SKIP="true"
    shift
    ;;
  --remove)
    ACTION_REMOVE="true"
    shift
    ;;
  --clean | --cleanup)
    ACTION_CLEANUP="true"
    shift
    ;;
  --reset)
    ACTION_RESET="true"
    shift
    ;;
  --file)
    TRACK_FILE="$2"
    shift 2
    ;;
  --help)
    show_help
    ;;
  *)
    shift
    ;;
  esac
done

# ===========================================================
# By default if no path is provided, the current directory is used
FILE_PATH="$(pwd)"
if [ -n "$1" ]; then
  FILE_PATH=$(realpath "$1")
fi

mkdir -p "$(dirname "$TRACK_FILE")"
touch "$TRACK_FILE"

# Helper functions ==========================================

update_entry() {
  awk -v path="$FILE_PATH" '$NF != path' "$TRACK_FILE" >"$TRACK_FILE.tmp"
  mv "$TRACK_FILE.tmp" "$TRACK_FILE"
  TIMESTAMP=$(date '+%Y/%m/%d  %I:%M:%S:%p')
  # Adding the new entry with the updated timestamp
  echo "$TIMESTAMP  $FILE_PATH" >>"$TRACK_FILE"
}

remove_entry() {
  awk -v path="$FILE_PATH" '$NF != path' "$TRACK_FILE" >"$TRACK_FILE.tmp"
  mv "$TRACK_FILE.tmp" "$TRACK_FILE"
  remove_empty_paths
}

remove_empty_paths() {
  while IFS= read -r line; do
    # Extract the path (last segment)
    path=$(echo "$line" | awk '{print $NF}')
    # Check if the path exists
    if [ -n "$path" ] && [ -e "$path" ]; then
      echo "$line"
    fi
  done <"$TRACK_FILE" >"$TRACK_FILE.tmp"
  mv "$TRACK_FILE.tmp" "$TRACK_FILE"
}

# Perform Actions ==========================================

if [ "$ACTION_RESET" = "true" ]; then
  echo "#" >"$TRACK_FILE"
fi

if [ "$ACTION_CLEANUP" = "true" ]; then
  remove_empty_paths
fi

if [ "$ACTION_REMOVE" = "true" ]; then
  remove_entry
  exit 0
fi

if [ "$ACTION_SKIP" != "true" ]; then
  update_entry
fi

command nvim "$@"
